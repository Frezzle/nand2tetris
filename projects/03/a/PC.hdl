// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Use flags to decide which (of four) values should go into the register (effectively an if..elif..elif..else).
    // Reset takes precedence, followed by load, then increment.
    Inc16(in=o, out=outPlusOne);
    Mux16(a=o, b=outPlusOne, sel=inc, out=sameOrInc); // keep same output or increment
    Mux16(a=sameOrInc, b=in, sel=load, out=sameOrIncOrNew); // keep same output or increment or use new input
    Mux16(a=sameOrIncOrNew, sel=reset, out=sameOrIncOrNewOrZero); // keep same output or increment use new input or use new input or set to zero

    // a register is always loading a (new or changed) value depending on the flags
    Register(in=sameOrIncOrNewOrZero, load=true, out=o, out=out);
}
